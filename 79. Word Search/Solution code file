//Link for problem :- https://leetcode.com/problems/word-search/

// code --->

class Solution {
public:
    bool func(int i,int j,vector<vector<char>>& board,int index,string word)
    {
        if(index+1>=word.length()) return true;
        
        char temp=board[i][j];
        board[i][j]='#';
        
        if(i>0 )            // go up
        {
            if( word[index+1]==board[i-1][j])
            {
               if(func(i-1,j,board,index+1,word)) 
                {
                    board[i][j] = temp;
                    return true;
                } 
            }
            
        }
        if(i<board.size()-1 )
        {
            if(word[index+1]==board[i+1][j])
            {
                if(func(i+1,j,board,index+1,word)) 
                {
                    board[i][j] = temp;

                    return true;
                }
            }
            
        }
        if(j>0 )
        {
            if(word[index+1]==board[i][j-1])
            {
                if(func(i,j-1,board,index+1,word))
                {
                    board[i][j] = temp;

                    return true;
                }
            }
        }
        if(j<board[0].size()-1)
        {
            if(word[index+1]==board[i][j+1])
            {
                if(func(i,j+1,board,index+1,word))
                {
                    board[i][j] = temp;


                    return true;
                }
            }
            
        }
                board[i][j] = temp;
        
        return false;
    }
    
    bool exist(vector<vector<char>>& board, string word) 
    {
        for(int i=0;i<board.size();i++)
        {
            for(int j=0;j<board[0].size();j++)
            {
                if(board[i][j]==word[0])
                {
                    if(func(i,j,board,0,word)) return true;
                }
            }
        }
        return false;
    }
};
